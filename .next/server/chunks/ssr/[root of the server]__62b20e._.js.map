{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/allie/StarsArena/Vitrine_StarsArena/app/provider.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\r\n\r\nexport function ThemeProvider({\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof NextThemesProvider>) {\r\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKO,SAAS,cAAc,EAC5B,QAAQ,EACR,GAAG,OAC6C;IAChD,qBAAO,8OAAC,gJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/allie/StarsArena/Vitrine_StarsArena/components/GlobalBackground.tsx"],"sourcesContent":["// components/GlobalBackground.tsx\r\n\"use client\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\n\r\n/** RNG déterministe à partir d’un seed */\r\nfunction makeRng(seed: number) {\r\n  let s = seed >>> 0;\r\n  return () => {\r\n    s = (s * 1664525 + 1013904223) >>> 0;\r\n    return s / 0xffffffff;\r\n  };\r\n}\r\n\r\n/** seed crypto sûr côté client */\r\nfunction cryptoSeed() {\r\n  if (typeof window === \"undefined\" || !window.crypto) return Math.floor(Math.random() * 2 ** 32);\r\n  const arr = new Uint32Array(1);\r\n  window.crypto.getRandomValues(arr);\r\n  return arr[0];\r\n}\r\n\r\ntype Mode = \"reload\" | \"session\" | \"fixed\";\r\n\r\nconst GlobalBackground: React.FC<{\r\n  mode?: Mode;       // \"reload\" = nouveau pattern à chaque rafraîchissement (default)\r\n  fixedSeed?: number // utilisé si mode === \"fixed\"\r\n}> = ({ mode = \"reload\", fixedSeed = 1337 }) => {\r\n  const [seed, setSeed] = useState<number | null>(null);\r\n\r\n  // Choix du seed selon le mode\r\n  useEffect(() => {\r\n    if (mode === \"fixed\") {\r\n      setSeed(fixedSeed);\r\n      return;\r\n    }\r\n    if (mode === \"session\") {\r\n      const key = \"starsarena-bg-seed\";\r\n      const stored = typeof window !== \"undefined\" ? sessionStorage.getItem(key) : null;\r\n      if (stored) {\r\n        setSeed(parseInt(stored, 10));\r\n      } else {\r\n        const s = cryptoSeed();\r\n        sessionStorage.setItem(key, String(s));\r\n        setSeed(s);\r\n      }\r\n    } else {\r\n      // \"reload\" -> nouveau seed à chaque page load\r\n      setSeed(cryptoSeed());\r\n    }\r\n  }, [mode, fixedSeed]);\r\n\r\n  // Tant qu’on n’a pas de seed on ne rend rien pour éviter un flash\r\n  if (seed === null) return null;\r\n\r\n  const { blobs, bokehs } = useMemo(() => {\r\n    const rand = makeRng(seed);\r\n\r\n    const blobs = Array.from({ length: 12 }).map(() => ({\r\n      size: 200 + Math.floor(rand() * 200),           // 200–400\r\n      top: 5 + Math.floor(rand() * 90),               // évite les bords (5%–95%)\r\n      left: 5 + Math.floor(rand() * 90),\r\n      opacity: +(0.45 + rand() * 0.3).toFixed(2),     // 0.45–0.75\r\n      delay: +(rand() * 4).toFixed(2),\r\n      colorIdx: Math.floor(rand() * 6),\r\n    }));\r\n\r\n    const bokehs = Array.from({ length: 24 }).map(() => ({\r\n      size: 8 + Math.floor(rand() * 12),              // 8–20\r\n      top: Math.floor(rand() * 100),\r\n      left: Math.floor(rand() * 100),\r\n      delay: +(rand() * 5).toFixed(2),\r\n      twinkle: 5 + Math.floor(rand() * 5),            // 5–9s\r\n      drift: 12 + Math.floor(rand() * 8),             // 12–20s\r\n      hue: Math.floor(260 + rand() * 70),             // violet→rose\r\n      alpha: +(0.2 + rand() * 0.18).toFixed(2),       // 0.20–0.38\r\n      dx: Math.floor((rand() - 0.5) * 180),           // dérive X aléatoire\r\n      dy: Math.floor((rand() - 0.5) * 180),           // dérive Y aléatoire\r\n    }));\r\n\r\n    return { blobs, bokehs };\r\n  }, [seed]);\r\n\r\n  const palette = [\r\n    \"rgba(138, 43, 226, OPACITY)\",\r\n    \"rgba(186, 85, 211, OPACITY)\",\r\n    \"rgba(153, 50, 204, OPACITY)\",\r\n    \"rgba(255, 105, 180, OPACITY)\",\r\n    \"rgba(147, 112, 219, OPACITY)\",\r\n    \"rgba(72, 61, 139, OPACITY)\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {/* Dégradé global */}\r\n      <div className=\"absolute inset-0 -z-50 bg-gradient-to-br from-[#2a1155] via-[#180b36] to-[#3b0080]\" />\r\n\r\n      {/* Blobs colorés */}\r\n      {blobs.map((b, i) => {\r\n        const color = palette[b.colorIdx].replace(\"OPACITY\", String(b.opacity));\r\n        return (\r\n          <div\r\n            key={`blob-${i}`}\r\n            className=\"absolute rounded-full pointer-events-none animate-blob blur-2xl md:blur-3xl\"\r\n            style={{\r\n              width: b.size,\r\n              height: b.size,\r\n              top: `${b.top}%`,\r\n              left: `${b.left}%`,\r\n              backgroundColor: color,\r\n              animationDelay: `${b.delay}s`,\r\n              willChange: \"transform, opacity\",\r\n              mixBlendMode: \"screen\",\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n\r\n      {/* Grille subtile */}\r\n      <div\r\n        className=\"absolute inset-0 pointer-events-none\"\r\n        style={{\r\n          backgroundImage:\r\n            \"linear-gradient(rgba(255,255,255,0.03) 1px, transparent 1px), linear-gradient(90deg, rgba(255,255,255,0.03) 1px, transparent 1px)\",\r\n          backgroundSize: \"40px 40px\",\r\n          maskImage:\r\n            \"radial-gradient(ellipse at 50% 20%, rgba(0,0,0,0.6), rgba(0,0,0,0.1) 60%, transparent)\",\r\n          WebkitMaskImage:\r\n            \"radial-gradient(ellipse at 50% 20%, rgba(0,0,0,0.6), rgba(0,0,0,0.1) 60%, transparent)\",\r\n        }}\r\n      />\r\n\r\n      {/* Lignes diagonales */}\r\n      <svg className=\"absolute inset-0 w-full h-full pointer-events-none\">\r\n        <defs>\r\n          <pattern id=\"diag\" patternUnits=\"userSpaceOnUse\" width=\"40\" height=\"40\" patternTransform=\"rotate(45)\">\r\n            <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"40\" stroke=\"rgba(255,255,255,0.02)\" strokeWidth=\"1\" />\r\n          </pattern>\r\n        </defs>\r\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#diag)\" />\r\n      </svg>\r\n\r\n      {/* Bokeh lights (plus visibles + dérive aléatoire) */}\r\n      <div className=\"absolute inset-0 pointer-events-none\">\r\n        {bokehs.map((k, i) => {\r\n          const glow = `hsla(${k.hue}, 90%, 65%, ${k.alpha})`;\r\n          return (\r\n            <span\r\n              key={`bokeh-${i}`}\r\n              className=\"absolute rounded-full animate-bokeh-twinkle animate-bokeh-drift\"\r\n              style={{\r\n                width: k.size,\r\n                height: k.size,\r\n                left: `${k.left}%`,\r\n                top: `${k.top}%`,\r\n                backgroundColor: glow,\r\n                boxShadow: `0 0 ${Math.max(14, k.size * 2)}px ${Math.max(6, Math.floor(k.size / 2))}px ${glow}`,\r\n                animationDelay: `${k.delay}s`,\r\n                animationDuration: `${k.twinkle}s, ${k.drift}s`,\r\n                filter: \"blur(2px)\",\r\n                mixBlendMode: \"screen\",\r\n                willChange: \"transform, opacity\",\r\n                // variables CSS pour la dérive\r\n                // @ts-ignore\r\n                \"--dx\": `${k.dx}px`,\r\n                // @ts-ignore\r\n                \"--dy\": `${k.dy}px`,\r\n              } as React.CSSProperties}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GlobalBackground;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}